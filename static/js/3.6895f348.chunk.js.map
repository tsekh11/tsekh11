{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItems/DialogItems.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/Dialogs.Container.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","to","id","name","Message","message","Dialogs","dialogs","dialogData","map","d","messages","messageData","m","dialogItems","onChange","event","text","target","value","updateMessageText","placeholder","updateTextArea","onClick","newMessageCreate","compose","connect","state","messagesData","isAuth","auth","dispatch","newMessageActionCreator","updateMessageActionCreator","WithAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,6FCYlMC,EARI,SAACC,GAChB,OAAO,yBAAKC,UAAWC,IAAEC,QACrB,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,IAAKL,EAAMM,QCGrCC,EAPC,SAACP,GACb,OAAO,yBAAKC,UAAWC,IAAEM,SACpBR,EAAMQ,UCmCAC,EAlCC,SAACT,GAEb,IAAIU,EAAUV,EAAMG,OAAOQ,WAAWC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYP,KAAMO,EAAEP,KAAMD,GAAIQ,EAAER,QAC3ES,EAAWd,EAAMG,OAAOY,YAAYH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASR,QAASQ,EAAER,aAUrE,OACI,yBAAKP,UAAWC,IAAEQ,SACd,yBAAKT,UAAWC,IAAEe,aAEVP,GAGR,yBAAKT,UAAWC,IAAEY,UAEVA,EAEJ,8BAAUI,SAfG,SAACC,GACtB,IAAIC,EAAOD,EAAME,OAAOC,MACxBtB,EAAMuB,kBAAkBH,IAawBI,YAAa,qBAC3CF,MAAOtB,EAAMG,OAAOsB,iBAC9B,6BACI,4BAAQC,QAtBP,WACb1B,EAAM2B,qBAqBM,Y,+BCJLC,sBACXC,aAdkB,SAACC,GACnB,MAAO,CACH3B,OAAQ2B,EAAMC,aACdC,OAAQF,EAAMG,KAAKD,WAGF,SAACE,GACtB,MAAO,CACHP,iBAAkB,WAAOO,EAASC,gBAClCZ,kBAAmB,SAACH,GAAUc,EAASE,YAA2BhB,SAMtEiB,IAFWT,EArBU,SAAC5B,GACtB,OAAKA,EAAMgC,OAEJ,6BACP,kBAAC,EAAYhC,IAHa,kBAAC,IAAD,CAAUI,GAAI","file":"static/js/3.6895f348.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1rTdK\",\"dialogItems\":\"Dialogs_dialogItems__2lnt6\",\"active\":\"Dialogs_active__3flKz\",\"dialog\":\"Dialogs_dialog__3i10k\",\"messages\":\"Dialogs_messages__1fumB\",\"message\":\"Dialogs_message__11pX1\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={s.dialog}>\r\n        <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>\r\n        {props.message}\r\n            </div>\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItems/DialogItems\";\r\nimport Message from \"./Messages/Messages\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogs = props.dialog.dialogData.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messages = props.dialog.messageData.map(m => <Message message={m.message}/>)\r\n\r\n    let newMessage = () => {\r\n        props.newMessageCreate()\r\n    }\r\n\r\n    let textMessageChanges = (event) => {\r\n        let text = event.target.value;\r\n        props.updateMessageText(text)\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {\r\n                    dialogs\r\n                }\r\n            </div>\r\n            <div className={s.messages}>\r\n                {\r\n                    messages\r\n                }\r\n                <textarea onChange={textMessageChanges} placeholder={'Enter your message'}\r\n                          value={props.dialog.updateTextArea}/>\r\n                <div>\r\n                    <button onClick={newMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {newMessageActionCreator, updateMessageActionCreator} from \"../../Redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst DialogsContainer = (props) => {\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return <div>\r\n    <Dialogs {...props} />\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialog: state.messagesData,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        newMessageCreate: () => {dispatch(newMessageActionCreator())},\r\n        updateMessageText: (text) => {dispatch(updateMessageActionCreator(text))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(DialogsContainer)\r\n"],"sourceRoot":""}