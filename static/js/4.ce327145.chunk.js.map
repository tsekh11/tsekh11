{"version":3,"sources":["components/Users/Users.module.css","components/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","../node_modules/reselect/es/index.js","Redux/users-selectors.js","components/Users/Users.Container.jsx"],"names":["module","exports","Paginator","onPageChanged","currentPage","pages","useState","portionNumber","setPortionNumber","leftPortionBorder","rightPortionBorder","onClick","className","s","button","filter","p","map","span","User","user","follow","unfollow","disabled","setDisabled","u","usersField","key","id","to","img","src","photos","small","userlogo","followed","name","status","location","Users","props","useEffect","getUsers","pageSize","pagesCount","Math","ceil","totalUsersCount","i","push","pageNumber","setCurrentPage","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUsersSelector","state","userData","users","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPageSelector","UsersContainer","connect"],"mappings":"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","file":"static/js/4.ce327145.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Users_img__B08GN\",\"usersField\":\"Users_usersField__3LXdy\",\"span\":\"Users_span__2l1_Q\",\"currentPage\":\"Users_currentPage__fD-7Y\",\"button\":\"Users_button__1u32p\"};","import s from \"../Users/Users.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst Paginator = ({onPageChanged, currentPage, pages}) => {\r\n\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let portionSize = 10;\r\n    let leftPortionBorder = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionBorder = portionNumber * portionSize;\r\n\r\n    return <div>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => setPortionNumber(portionNumber - 1)} className={s.button} >Back</button>\r\n        }\r\n        {\r\n            pages.filter(p => p >= leftPortionBorder && p <= rightPortionBorder)\r\n                .map(p => {\r\n                    return <span onClick={() => onPageChanged(p)}\r\n                                 className={currentPage === p ? s.currentPage : s.span}>{p}</span>\r\n                })\r\n        }\r\n        { portionNumber !== portionSize &&\r\n        <button onClick={() => setPortionNumber(portionNumber + 1)} className={s.button} >Next</button>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import s from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userlogo from \"../Pics/userlogo.png\";\r\nimport React from \"react\";\r\n\r\n\r\nconst User = ({user, follow, unfollow, disabled, setDisabled}) => {\r\n    let u = user;\r\n\r\n    return <div className={s.usersField} key={u.id}>\r\n                <span>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                    <div>\r\n                        <img className={s.img} src={u.photos.small ? u.photos.small : userlogo}/>\r\n                    </div>\r\n                    </NavLink>\r\n                    <div>\r\n                        {u.followed ? <button disabled={disabled} onClick={() => {\r\n                                setDisabled(true)\r\n                                unfollow(u.id, setDisabled)\r\n                            }}>\r\n                                Unfollow\r\n                            </button>\r\n                            : <button disabled={disabled} onClick={() => {\r\n                                setDisabled(true)\r\n                                follow(u.id, setDisabled)\r\n                            }\r\n                            }>\r\n                                Follow\r\n                            </button>}\r\n                    </div>\r\n                </span>\r\n        <span>\r\n                        <span>{u.name}</span>\r\n                        <div>\r\n                            <span>{u.status}</span>\r\n                        </div>\r\n                    </span>\r\n        <span>\r\n                        <div>{u.location}</div>\r\n                    </span>\r\n    </div>\r\n}\r\nexport default User","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport Paginator from \"../Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = (props) => {\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    useEffect(() => {\r\n        props.getUsers(props.currentPage, props.pageSize)\r\n    }, [props.currentPage, props.pageSize, disabled])\r\n\r\n    let onPageChanged = (pageNumber) => {\r\n        props.setCurrentPage(pageNumber);\r\n        props.getUsers(props.currentPage, props.pageSize)\r\n    }\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div className={s.usersField}>\r\n        <Paginator onPageChanged={onPageChanged} currentPage={props.currentPage} pages={pages}/>\r\n        {\r\n            props.user.map(u => {\r\n                return <User user={u} follow={props.follow} unfollow={props.unfollow} setDisabled={setDisabled} disabled={disabled} />\r\n            })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import {createSelector} from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.userData.users.filter(u => true)\r\n}\r\n\r\nexport const getUsersSelector = createSelector(\r\n    getUsers, (users) => {\r\n        return users.filter(u => true)\r\n    }\r\n)\r\n\r\n\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.userData.pageSize\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n    return state.userData.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.userData.currentPage\r\n}\r\n\r\n","import {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {unfollow, follow, setCurrentPage, getUsers} from \"../../Redux/users-reducer\";\r\nimport {\r\n    getCurrentPageSelector,\r\n    getPageSizeSelector,\r\n    getTotalUsersCountSelector,\r\n    getUsersSelector\r\n} from \"../../Redux/users-selectors\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        user: getUsersSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state)\r\n    }\r\n}\r\n\r\nconst UsersContainer = connect(mapStateToProps, {unfollow, follow, setCurrentPage, getUsers})(Users);\r\n\r\nexport default UsersContainer;"],"sourceRoot":""}